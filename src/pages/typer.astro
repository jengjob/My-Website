
---
import GenerateWords from '../components/GenerateWords.jsx';
---
<script>
    fetch("/src/words.txt")// get words from words.txt and put then in localstorage as ["word","word"]
    .then(x => x.text())
    .then(y =>{
        let textArr = y.split('\n');
        for(let i = 0; i < textArr.length; i++){
            localStorage.setItem(i.toString(),textArr[i].toString());
        }
    });
</script>
<script is:inline src="https://code.jquery.com/jquery-3.7.0.min.js">import { string } from "astro/zod";
</script>

<html lang="en">
    <style>
        .word-container{
            display: flex;
            justify-content: left;
            flex-wrap: wrap;
            max-width: 200px;
            background-color: rgb(255, 255, 255);
            white-space: pre;
            
        }
        .nodeContainer{
            height = 10px;
        }
    </style>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Typer</title>
	</head>
	<body>
		<h1>Typer</h1>
	</body>
    <div>
        <div class="word-container" id="poop">
        </div>
        <input id="typermouth" type="text"><br>
        <br> 
        <span id="output1">output should be here</span>
    </div>
    <script is:inline>
        for(let i =0; i<20; i++){ // create container for each word. each word contains spans for each letter
            let newNodeContainer = "<div class='nodeContainer' id="+i+" >";
            let divContent = localStorage.getItem(Math.floor(Math.random()*3000).toString())+' ';
            let word="";
            for(let a = 0;a<divContent.length; a++){
                let newLetterContainer = "<span class= 'nodeLetter' >";
                let newLetter = divContent[a];
                let letterClose = "</span>"
                word= word+newLetterContainer+newLetter+letterClose;
            }
            let divClose = "</div>";

            $('#poop').append(newNodeContainer+word+divClose);

        }
        let x= 0;
        let wordLength = 0;
        let currletter = 0;
        let allgreen = true;
        let redcount = 0;//keeps track of which letter is missed
        wordLength = document.getElementById(x).childElementCount; 
        for(let i =0; i<wordLength-1;i++)//underlines the first word except the space
        {
            document.getElementById(0).children[i].style.textDecoration = "underline"
        }
        $("#typermouth").on('keydown', function(e){
            let userinput = e.key
            let pattern = /^[A-Za-z ]+$/;
            console.log(userinput)
            console.log()
            if(!(pattern.test(userinput)&&((userinput.length <2)||(userinput =="Backspace") )))
            {
                console.log("not allowed")
                return;
            }
            if((userinput === document.getElementById(x).children[currletter].textContent)&&allgreen){
                //if user types in correct letter
                // - highlight for correct letter
                document.getElementById(x).children[currletter].style.backgroundColor = "#9dfaa7";
                //set background green
                
            }else if(userinput == "Backspace"){
                if(redcount>0){
                    redcount--;
                    if(redcount ==0)
                    {
                        allgreen = true;
                    }
                }
                if(currletter>0)
                {currletter--}
                else{
                    if(x==0){return;}
                    x--;
                    currletter = document.getElementById(x).childElementCount-1;
                    wordLength = document.getElementById(x).childElementCount;
                }
                console.log(x+ "  "+ currletter+ "  "+ wordLength);
                document.getElementById(x).children[currletter].style.backgroundColor = "white";
                
                return;
            }else{
                document.getElementById(x).children[currletter].style.backgroundColor = "#fc9090";
                //set background red
                allgreen = false;
                redcount++;
            }
            currletter++;
            if(currletter==wordLength){
                console.log("inside end word")
                currletter=0;
                x++;
                if(allgreen)
                {
                    document.getElementById("typermouth").value = "";
                }
                //$("#poop").html(localStorage.getItem(Math.floor(Math.random()*3000)));
                wordLength = document.getElementById(x).childElementCount;
            }
            console.log(x+ "  "+ currletter+ "  "+ wordLength);
            
        });
        /*document.getElementById("typermouth").addEventListener('keydown',function(event){
            const key = event.key;

            if(key === "Backspace" || key === "Delete"){
                console.log(key)
                if(currletter === 0)
                {
                    if(x>0)
                    {
                        x--;
                        currletter,wordLength = document.getElementById(x).childElementCount;
                        document.getElementById(x).children[currletter].style.backgroundColor = "white";
                    }else{
                    }
                }else{
                    currletter--;
                    document.getElementById(x).children[currletter].style.backgroundColor = "white";
                    
                }
            }
        });*/
    </script>
</html>
